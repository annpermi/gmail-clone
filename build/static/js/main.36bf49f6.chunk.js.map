{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Mail.js","Section.js","EmailRow.js","EmailList.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","photoUrl","onClick","signOut","then","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","Button","startIcon","fontSize","InboxIcon","StarIcon","AccessTimeIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","Mail","history","useHistory","push","subject","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","PeopleIcon","LocalOfferIcon","to","message","timestamp","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","formState","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","required","Login","variant","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36bf49f6.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { \n    login, \n    logout\n} = userSlice.actions;\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import firebase from 'firebase';\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD88Qa0n4r1uUsAJkuNXbSr3OkBmQB5qF8\",\n    authDomain: \"clone-8281e.firebaseapp.com\",\n    projectId: \"clone-8281e\",\n    storageBucket: \"clone-8281e.appspot.com\",\n    messagingSenderId: \"112096799021\",\n    appId: \"1:112096799021:web:fa5f420cd722e197a5cba4\",\n    measurementId: \"G-YF6Q373C9H\"\n  };\n// Connect Front-End to Back-End\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n//Access to the database\nconst db = firebaseApp.firestore();\n//Enable google authentification\n//Got authentification\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n//Get access\nexport { db, auth, provider};\n","import React from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Header.css'\nimport { logout, selectUser } from './features/userSlice';\nimport { auth } from './firebase';\n\nfunction Header() {\n    const user = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    const signOut = () => {\n        //logout from firebase\n        auth.\n        signOut()\n        .then(() => {\n            //logout from google\n            dispatch(logout())\n        })\n    }\n    return (\n        <div className='header'>\n            <div className=\"header__left\">\n                <IconButton>\n                    <MenuIcon />\n                </IconButton>\n                <img src='https://cdn.vox-cdn.com/thumbor/8fWz6qpiMYMsZhY4vrc9Vhl5yL8=/0x110:1320x770/fit-in/1200x600/cdn.vox-cdn.com/uploads/chorus_asset/file/21939811/newgmaillogo.jpg' alt='Gmail logo'/>\n            </div>\n            <div className=\"header__middle\">\n                <SearchIcon />\n                <input placeholder='Search mail' type='text' />\n                <ArrowDropDownIcon />\n            </div>\n            <div className=\"header__right\">\n                <IconButton>\n                    <AppsIcon />\n                </IconButton>\n                <IconButton>\n                    <NotificationsIcon />\n                </IconButton>\n                <IconButton>\n                    <Avatar src={user?.photoUrl} onClick={signOut}/>\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport './SidebarOption.css';\n\nfunction SidebarOption({Icon, title, number, selected}) {\n    return <div className={`sidebarOption ${selected && 'sidebarOption--active'}`}>\n            <Icon />\n            <h3>{title}</h3>\n            <p>{number}</p>\n        </div>\n}\n\nexport default SidebarOption;\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const mailSlice = createSlice({\n  name: 'mail',\n  initialState: {\n    selectedMail: null,\n    sendMessageIsOpen: false,\n  },\n  reducers: {\n    selectMail: (state, action) => {\n      state.selectedMail = action.payload;\n    },\n    openSendMessage: (state) => {\n      state.sendMessageIsOpen = true;\n    },\n    closeSendMessage: (state) => {\n      state.sendMessageIsOpen = false;\n    },\n  },\n});\n\nexport const { selectMail, openSendMessage, closeSendMessage} = mailSlice.actions;\nexport const selectOpenMail = (state) => state.mail.selectedMail;\nexport const selectSendMessageIsOpen = (state) => state.mail.sendMessageIsOpen;\n\nexport default mailSlice.reducer;\n","import React from 'react';\nimport { Button, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport StarIcon from '@material-ui/icons/Star';\nimport SidebarOption from './SidebarOption';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport NearMeIcon from '@material-ui/icons/NearMe';\nimport NoteIcon from '@material-ui/icons/Note';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PersonIcon from '@material-ui/icons/Person';\nimport DuoIcon from '@material-ui/icons/Duo';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport { useDispatch } from 'react-redux';\nimport { openSendMessage } from './features/mailSlice';\nimport './Sidebar.css';\n\nfunction Sidebar() {\n    // When click on button Compose the SendMail will appear\n    const dispatch = useDispatch();\n    return (\n        <div className='sidebar'>\n            <Button startIcon={<AddIcon fontSize='large'/>} className='sidebar__compose'\n            onClick={()=>dispatch(openSendMessage())}\n            >Compose</Button>\n            <SidebarOption Icon={InboxIcon} title='Inbox' number={54} selected={true}/>\n            <SidebarOption Icon={StarIcon} title='Starred' number={54}/>\n            <SidebarOption Icon={AccessTimeIcon} title='Snoozed' number={54}/>\n            <SidebarOption Icon={LabelImportantIcon} title='Important' number={54}/>\n            <SidebarOption Icon={NearMeIcon} title='Sent' number={54}/>\n            <SidebarOption Icon={NoteIcon} title='Drafts' number={54}/>\n            <SidebarOption Icon={ExpandMoreIcon} title='More' number={54}/>\n\n            <div className=\"sidebar__footer\">\n                <div className=\"sidebar__footerIcons\">\n                    <IconButton>\n                        <PersonIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <DuoIcon />\n                    </IconButton>\n                    <IconButton>\n                        <PhoneIcon />\n                    </IconButton>\n                </div>\n            </div>\n        </div>\n    );\n} \n\nexport default Sidebar\n","import React from 'react';\nimport {useHistory} from 'react-router-dom'\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport './Mail.css';\nimport { selectOpenMail } from './features/mailSlice';\nimport { useSelector } from 'react-redux';\n\nfunction Mail() {\n    const history = useHistory();\n    const selectedMail = useSelector(selectOpenMail);\n    return (\n        <div className='mail'>\n            <div className=\"mail__tools\">\n                <div className=\"mail__toolsLeft\">\n                    <IconButton onClick={()=> history.push('/')}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoveToInboxIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ErrorIcon />\n                    </IconButton>\n                    <IconButton>\n                        <DeleteIcon />\n                    </IconButton>\n                    <IconButton>\n                        <EmailIcon />\n                    </IconButton>\n                    <IconButton>\n                        <WatchLaterIcon />\n                    </IconButton>\n                    <IconButton>\n                        <CheckCircleIcon />\n                    </IconButton>\n                    <IconButton>\n                        <LabelImportantIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n                <div className=\"mail__toolsRight\">\n                    <IconButton>\n                        <UnfoldMoreIcon />\n                    </IconButton>\n                    <IconButton>\n                        <PrintIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ExitToAppIcon />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"mail__body\">\n                    <div className=\"mail__bodyHeader\">\n                        {/* ? - if it's undefined  */}\n                        <h2>{selectedMail?.subject}</h2>\n                        <LabelImportantIcon className='mail__important' />\n                        <p>{selectedMail?.title}</p>\n                        <p className='mail__time'>{selectedMail?.time}</p>\n                    </div>\n                    <div className=\"mail__message\">\n                        <p>{selectedMail?.description}</p>\n                    </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Mail\n","import React from 'react';\nimport './Section.css'\n\nfunction Section({Icon, title, color, selected}) {\n    return (\n        <div className={`section ${selected && 'section--selected'}`}\n        style={{\n            borderBottom: `3px solid ${color}`,\n            color: `${selected && color}`,\n        }}\n        >\n          <Icon />\n          <h4>{title}</h4>  \n        </div>\n    )\n}\n\nexport default Section; \n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { IconButton } from '@material-ui/core';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\nimport { useDispatch } from 'react-redux';\nimport { selectMail } from './features/mailSlice';\nimport './EmailRow.css';\n\nfunction EmailRow({id, title, subject, description, time}) {\n    const history = useHistory(); //use history of the page\n    //pull dispatch\n    const dispatch = useDispatch();\n\n    const openMail = () => {\n        dispatch(selectMail({\n            /* we can track them and redirect */\n            id, \n            title, \n            subject, \n            description, \n            time\n        }))\n        history.push('/mail');\n    }\n    return (\n        <div onClick={openMail} className='emailRow'>\n            <div className=\"emailRow__options\">\n                <Checkbox />\n                <IconButton>\n                    <StarBorderOutlinedIcon />\n                </IconButton>\n                <IconButton>\n                    <LabelImportantOutlinedIcon />\n                </IconButton>\n            </div>\n            <h3 className=\"emailRow__title\">\n                {title}\n            </h3>\n            <div className=\"emailRow__message\">\n                <h4>\n                    {subject}{' '}\n                    <span className='emailRow__description'>- {description}</span>\n                </h4>\n            </div>\n            <p className=\"emailRow__time\">{time}</p>\n        </div>\n    )\n}\n\nexport default EmailRow;\n","import React, { useState, useEffect } from 'react';\nimport { Checkbox, IconButton } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport PeopleIcon from '@material-ui/icons/People';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport Section from './Section';\nimport EmailRow from './EmailRow';\nimport './EmailList.css'\nimport { db } from './firebase';\n\nfunction EmailList() {\n    //pease of state\n    const [emails, setEmails] = useState([]);\n    //run this pease of code when component it runs once \n    useEffect(() => {\n        //targetting the collection from database\n                                /* VAxfNJugURcPnqLn6k6b\n                                message\n                                \"This is a test message!\"\n                                subject\n                                \"Test message\"\n                                timestamp\n                                June 21, 2021 at 4:59:59 PM UTC-4\n                                to\n                                \"annpermi@gmail.com\" */\n    db.collection('emails')\n    .orderBy('timestamp', 'desc')\n    .onSnapshot((snapshot) => \n    setEmails(\n        snapshot.docs.map((doc) => \n                        ({\n                            id: doc.id,\n                            data: doc.data()\n                        }))\n        )\n    );\n    }, [])\n    return (\n        <div className='emailList'>\n            <div className=\"emailList__settings\">\n                <div className=\"emailList__settingsLeft\">\n                    <Checkbox />\n                    <IconButton>\n                        <ArrowDropDownIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <RedoIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n                <div className=\"emailList__settingsRight\">\n                    <IconButton>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChevronRightIcon />\n                    </IconButton>\n                    <IconButton>\n                        <KeyboardHideIcon />\n                    </IconButton>\n                    <IconButton>\n                        <SettingsIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"emailList__sections\">\n                    <Section Icon={InboxIcon} title='Primary' color='red' selected/>\n                    <Section Icon={PeopleIcon} title='Social' color='#1A73E8'/>\n                    <Section Icon={LocalOfferIcon} title='Promotions' color='green'/>\n            </div>\n\n            <div className=\"emailList__list\">\n                {emails.map(({id, data: {to, subject, message, timestamp}})=>(\n                    <EmailRow\n                    id={id}\n                    key={id}\n                    title={to}\n                    subject={subject}\n                    description={message}\n                    time={new Date(timestamp?.seconds * 1000).toUTCString()}\n                    />\n                ))}\n                {/* <EmailRow \n                title='Gmail'\n                subject='Hey check this out'\n                description='This is a gmail clone'\n                time='10pm'\n                />\n                <EmailRow \n                title='Facebook'\n                subject='How are you'\n                description='Like please'\n                time='10am'\n                /> */}\n            </div>\n        </div>\n    )\n}\n\nexport default EmailList;\n","import React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { closeSendMessage } from './features/mailSlice';\nimport { db } from './firebase';\nimport firebase from 'firebase';\nimport './SendMail.css';\n\nfunction SendMail() {\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors }} = useForm();\n    const dispatch = useDispatch();\n    const onSubmit = (formData) => {\n        console.log(formData)\n        //import data from local firebase file\n        //every time we submit, will push data to firebase\n        db.collection('emails').add(\n            {\n                to: formData.to,\n                subject: formData.subject,\n                message: formData.message,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\n            }\n        )\n        dispatch(closeSendMessage())\n    };\n\n    return (\n        <div className='sendMail'>\n            <div className=\"sendMail__header\">\n                <h3>New message</h3>\n                {/* Close message */}\n                <CloseIcon onClick={()=>dispatch(closeSendMessage())} className='sendMail__close'/>\n            </div>\n\n            {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\n            <form onSubmit={handleSubmit(onSubmit)}>\n                {/* register your input into the hook by invoking the \"register\" function */}\n                <input type='email' placeholder='To'{...register('to', { required: true })}/>\n                {/* errors will return when field validation fails  */}\n                {errors.to && <p className='sendMail__error'>To is Required!</p>}\n\n                {/* include validation with required or other standard HTML validation rules */}\n                <input placeholder='Subject' type=\"text\" {...register('subject', { required: true })}/>\n                {errors.subject && <p className='sendMail__error'>Subject is Required!</p>}\n\n                <input placeholder='Message...' type=\"text\" className='sendMail__message' {...register('message', { required: true })}/>\n                {errors.message && <p className='sendMail__error'>Message is Required!</p>}\n\n                <div className=\"sendMail__options\">\n                    <Button type='submit' className='sendMail__send'>Send</Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default SendMail;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { auth, provider } from './firebase';\nimport { login } from './features/userSlice'\nimport { useDispatch } from 'react-redux';\nimport './Login.css';\n\nfunction Login() {\n    const dispatch = useDispatch()\n    const signIn = () => {\n        // Google authentification \n        auth\n        .signInWithPopup(provider)\n        .then(({user}) => {\n            dispatch(\n                login({\n                displayName: user.displayName,\n                email: user.email,\n                photoUrl: user.photoURL\n                })\n            );\n        })\n        .catch(error=>alert(\"Error message\"))\n    }\n\n    return (\n        <div className='login'>\n            <div className=\"login__container\">\n                <img src=\"https://www.google.com/gmail/about/static-2.0/images/logo-gmail.png?fingerprint=c2eaf4aae389c3f885e97081bb197b97\" alt=\"Gmail logo\" />\n                <Button variant=\"contained\" color=\"primary\" onClick={signIn}>Login</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useEffect } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Mail from './Mail';\nimport EmailList from './EmailList';\nimport SendMail from './SendMail';\nimport { useSelector } from 'react-redux';\nimport { selectSendMessageIsOpen } from './features/mailSlice';\nimport { login, selectUser } from './features/userSlice';\nimport Login from './Login';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport { auth } from './firebase';\n\nfunction App() {\n  // Pull data from the state\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if(user){\n        //the user is logged in\n        dispatch(\n          login({\n          displayName: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        }))\n      }\n    })\n  }, [])\n\n  return (\n    <Router>\n{/* If no user -> login or -> render whole page */}\n      {!user ? (\n      <Login />\n      ): (\n      <div className=\"app\">\n        <Header />\n\n        <div className=\"app__body\">\n          <Sidebar />\n\n          <Switch>\n            <Route path='/mail'>\n              <Mail />\n            </Route>\n            <Route>\n              <EmailList path='/'/>\n            </Route>\n          </Switch>\n\n        </div>\n        {sendMessageIsOpen && <SendMail />}\n      </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mailReducer from '../features/mailSlice';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    mail: mailReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}